---
name: nightmayr-qt-5-15-6-2204-sdk
version: 5.15.6
base: core22
summary: Shared Qt 5.15
description: |
 This snap contains the necessary libraries required by
 Qt Applications.
confinement: strict
grade: stable
architectures:
  - build-on: amd64
  - build-on: arm64
  - build-on: armhf
  - build-on: ppc64el
compression: lzo
parts:
  mesa:
    after: []
    plugin: nil
    build-attributes:
    - no-patchelf
    build-packages: []
    stage-packages:
    - libgl1-mesa-dri
    - libglx-mesa0
    prime:
    - "-lib/udev"
    - "-usr/doc"
    - "-usr/doc-base"
    - "-usr/share/applications"
    - "-usr/share/apport"
    - "-usr/share/bug"
    - "-usr/share/doc"
    - "-usr/share/doc-base"
    - "-usr/share/icons"
    - "-usr/share/libdrm"
    - "-usr/share/libwacom"
    - "-usr/share/lintian"
    - "-usr/share/man"
    - "-usr/share/pkgconfig"

  sdl2:
    source: https://github.com/libsdl-org/SDL.git
    source-tag: release-2.0.22
    plugin: cmake
    cmake-generator: Ninja
    cmake-parameters:
      - -DCMAKE_BUILD_TYPE=Release
      - -DCMAKE_INSTALL_PREFIX=/usr
      - -DCMAKE_C_COMPILER=gcc
      - -DCMAKE_CXX_COMPILER=g++
      - -DLIB_INSTALL_DIR:PATH=/usr/lib/$CRAFT_ARCH_TRIPLET
      - -DSHARE_INSTALL_PREFIX:PATH=/usr/share
      - -DINCLUDE_INSTALL_DIR:PATH=/usr/include
      - -DSDL_PULSEAUDIO_SHARED=ON
      - -DSDL_DLOPEN=ON
      - -DARTS=OFF
      - -DESD=OFF
      - -DNAS=OFF
      - -DSDL_VIDEO_KMSDRM=ON
      - -DSDL_JACK_SHARED=ON
      - -DSDL_PIPEWIRE_SHARED=ON
      - -DSDL_ALSA=ON
      - -DSDL_STATIC=ON
      - -DSDL_VIDEO_VULKAN=ON
      - -DSDL_LIBDECOR_SHARED=ON
      - -DSDL_VIDEO_WAYLAND=ON
      - -DRPATH=OFF
      - -DCLOCK_GETTIME=ON
    override-build: |
      craftctl default
      rsync -a --ignore-existing $CRAFT_PART_INSTALL/ /
    build-snaps:
      - cmake
    build-packages:
      - rsync
      - libaudio-dev
      - libdecor-0-dev
      # pipewire
    stage-packages:
      - libdecor-0-0

  srt:
    source: https://github.com/Haivision/srt.git
    source-tag: v1.4.4
    plugin: cmake
    cmake-parameters:
      - -DCMAKE_INSTALL_PREFIX=/usr
      - -DCMAKE_BUILD_TYPE=Release
      - -DCMAKE_C_FLAGS_RELEASE=-s
      - -DCMAKE_CXX_FLAGS_RELEASE=-s
      - -DENABLE_LOGGING=OFF
      - -DENABLE_STATIC=OFF
    prime:
      - -usr/include
      - -usr/lib/$CRAFT_ARCH_TRIPLET/pkgconfig

  x264:
    source: https://code.videolan.org/videolan/x264.git
    source-tag: stable
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=/usr
      - --disable-cli
      - --enable-shared
      - --enable-strip
      - --libdir=/usr/lib/$CRAFT_ARCH_TRIPLET
      - --incdir=/usr/include/$CRAFT_ARCH_TRIPLET
    override-build: |
      craftctl default
      if [ $CRAFT_TARGET_ARCH = "armhf" ]; then
          execstack --clear-execstack $CRAFT_PART_INSTALL/usr/lib/$CRAFT_ARCH_TRIPLET/libx264.so.*
      fi
    build-packages:
      - execstack
    prime:
      - usr/lib
      - -usr/lib/pkgconfig

  aom:
    source: https://aomedia.googlesource.com/aom.git
    source-tag: v3.4.0
    plugin: cmake
    cmake-parameters:
      - -DCMAKE_INSTALL_PREFIX=/usr
      - -DCMAKE_BUILD_TYPE=Release
      - -DCMAKE_INSTALL_LIBDIR=lib/$CRAFT_ARCH_TRIPLET
      - -DCMAKE_C_FLAGS_RELEASE=-s
      - -DCMAKE_CXX_FLAGS_RELEASE=-s
      - -DCONFIG_MULTITHREAD=1
      - -DBUILD_SHARED_LIBS=1
      - -DENABLE_DOCS=0
      - -DENABLE_EXAMPLES=0
      - -DENABLE_TESTS=0
    override-build: |
      ARCHITECTURE=$(dpkg --print-architecture)
      if [ "${ARCHITECTURE}" = "amd64" ]; then
          EXTRA=""
      elif [ "${ARCHITECTURE}" = "ppc64el" ]; then
          EXTRA=""
      elif [ "${ARCHITECTURE}" = "arm64" ]; then
          EXTRA=""
      elif [ "${ARCHITECTURE}" = "armhf" ]; then
          EXTRA="-DAOM_TARGET_CPU=armv7 -DAOM_NEON_INTRIN_FLAG=-mfpu=neon"
      else
          EXTRA=""
      fi
      cmake $CRAFT_PART_SRC -G Ninja \
      -DCMAKE_BUILD_TYPE=Release \
      -DCMAKE_INSTALL_PREFIX=$CRAFT_PART_INSTALL/usr \
      -DCMAKE_INSTALL_LIBDIR=lib/$CRAFT_ARCH_TRIPLET \
      -DCMAKE_C_FLAGS_RELEASE=-s \
      -DCMAKE_CXX_FLAGS_RELEASE=-s \
      -DCONFIG_MULTITHREAD=1 \
      -DBUILD_SHARED_LIBS=1 \
      -DENABLE_DOCS=0 \
      -DENABLE_EXAMPLES=0 \
      -DENABLE_TESTS=0 ${EXTRA}
      cmake --build . -- -j${CRAFT_PARALLEL_BUILD_COUNT}
      cmake --build . --target install
    build-packages:
      - yasm
    prime:
      - -usr/include
      - -usr/lib/$CRAFT_ARCH_TRIPLET/libaom.a
      - -usr/lib/$CRAFT_ARCH_TRIPLET/pkgconfig

  dav1d:
    source: https://code.videolan.org/videolan/dav1d.git
    source-tag: 1.0.0
    plugin: meson
    meson-parameters:
      - --prefix=/usr
      - --buildtype=release
      - --strip
      - -Denable_tools=false
      - -Denable_tests=false
    build-packages:
      - meson
      - doxygen
      - nasm
    prime:
      - -usr/include
      - -usr/lib/$CRAFT_ARCH_TRIPLET/pkgconfig

  zimg:
    source: https://github.com/sekrit-twc/zimg.git
    source-tag: release-3.0.3
    plugin: autotools
    autotools-configure-parameters:
      - --prefix=/usr
      - --libdir=/usr/lib/$CRAFT_ARCH_TRIPLET
      - --includedir=/usr/include
      - --build=$CRAFT_ARCH_TRIPLET
    prime:
      - -usr/include
      - -usr/lib/*.a
      - -usr/lib/*.la
      - -usr/lib/pkgconfig

  ffnvcodec:
    source: https://github.com/FFmpeg/nv-codec-headers.git
    source-tag: sdk/10.0
    plugin: make
    make-parameters:
      - PREFIX=/usr
    prime:
      - -usr/include
      - -usr/lib/pkgconfig

  ffmpeg:
    after: [ ffnvcodec, aom, dav1d, x264, srt, zimg, sdl2 ]
    source: https://git.ffmpeg.org/ffmpeg.git
    source-tag: release/5.1
    plugin: autotools
    override-build: |
      ARCHITECTURE=$(dpkg --print-architecture)
      if [ "${ARCHITECTURE}" = "amd64" ]; then
          EXTRA="--enable-libmfx"
      elif [ "${ARCHITECTURE}" = "ppc64el" ]; then
          EXTRA=""
      elif [ "${ARCHITECTURE}" = "armhf" ] || [ "${ARCHITECTURE}" = "arm64" ]; then
          EXTRA=""
      else
          EXTRA=""
      fi
      ./configure \
      --prefix=/usr \
      --disable-static \
      --disable-programs \
      --disable-doc \
      --libdir=/usr/lib/$CRAFT_ARCH_TRIPLET \
      --incdir=/usr/include/$CRAFT_ARCH_TRIPLET \
      --arch=$SNAPCRAFT_TARGET_ARCH \
      --enable-avcodec \
      --enable-decoder=h264 \
      --enable-decoder=hevc \
      --enable-hwaccel=h264_nvdec \
      --enable-hwaccel=h264_vaapi \
      --enable-hwaccel=h264_vdpau \
      --enable-hwaccel=hevc_nvdec \
      --enable-hwaccel=hevc_vaapi \
      --enable-hwaccel=hevc_vdpau \
      --enable-shared \
      --enable-gpl \
      --enable-gnutls \
      --enable-ladspa \
      --enable-libaom \
      --enable-libass \
      --enable-libbluray \
      --enable-libbs2b \
      --enable-libcaca \
      --enable-libcdio \
      --enable-libcodec2 \
      --enable-libdav1d \
      --enable-libflite \
      --enable-libfontconfig \
      --enable-libfreetype \
      --enable-libfribidi \
      --enable-libgme \
      --enable-libgsm \
      --enable-libjack \
      --enable-libmp3lame \
      --enable-libmysofa \
      --enable-libopenjpeg \
      --enable-libopenmpt \
      --enable-libopus \
      --enable-libpulse \
      --enable-librabbitmq \
      --enable-librubberband \
      --enable-libshine \
      --enable-libsnappy \
      --enable-libsoxr \
      --enable-libspeex \
      --enable-libsrt \
      --enable-libssh \
      --enable-libtheora \
      --enable-libtwolame \
      --enable-libvidstab \
      --enable-libvorbis \
      --enable-libvpx \
      --enable-libwebp \
      --enable-libx265 \
      --enable-libxml2 \
      --enable-libxvid \
      --enable-libzimg \
      --enable-libzmq \
      --enable-libzvbi \
      --enable-lv2 \
      --enable-omx \
      --enable-openal \
      --enable-opencl \
      --enable-opengl \
      --enable-sdl2 \
      --enable-librsvg \
      --enable-libdc1394 \
      --enable-libdrm \
      --enable-libiec61883 \
      --enable-frei0r \
      --enable-libx264 ${EXTRA}
      make -j $(nproc)
      make DESTDIR="$CRAFT_PART_INSTALL" install
    build-packages:
      - ladspa-sdk
      - libasound2-dev
      - libass-dev
      - libasyncns-dev
      - libavc1394-dev
      - libbluray-dev
      - libbs2b-dev
      - libcaca-dev
      - libcdio-dev
      - libcdio-paranoia-dev
      # - libchromaprint-dev
      - libcodec2-dev
      - libdc1394-dev
      - libdrm-dev
      - libflac++-dev
      - flite1-dev
      - libfontconfig-dev
      - libfreetype-dev
      - frei0r-plugins-dev
      - libfribidi-dev
      - libgl1-mesa-dev
      - libgme-dev
      - libgnutls28-dev
      - libgsm1-dev
      - libharfbuzz-dev
      - libicu-dev
      - libiec61883-dev
      - libjack-jackd2-dev
      - liblilv-dev
      - on amd64:
        - libmfx-dev
      - libmp3lame-dev
      - libmysofa-dev
      - libomxil-bellagio-dev
      - libopenal-dev
      - libopenjp2-7-dev
      - libopenmpt-dev
      - libopus-dev
      - libpng-dev
      - libpulse-dev
      - librabbitmq-dev
      - librsvg2-dev
      - librubberband-dev
      - libshine-dev
      - libsnappy-dev
      - libsndfile1-dev
      - libsoxr-dev
      - libspeex-dev
      - libssh-gcrypt-dev
      - libtheora-dev
      - libtwolame-dev
      - libva-dev
      - libvdpau-dev
      - libvidstab-dev
      - libvorbis-dev
      - libvpx-dev
      - libwebp-dev
      - libx11-dev
      - libx265-dev
      - libxcb-render0-dev
      - libxcb-shape0-dev
      - libxcb-shm0-dev
      - libxcb-xfixes0-dev
      - libxcb1-dev
      - libxext-dev
      - libxml2-dev
      - libxrender-dev
      - libxv-dev
      - libxvidcore-dev
      - libzmq3-dev
      - libzvbi-dev
      - ocl-icd-opencl-dev
      - libglu1-mesa-dev
    stage-packages:
      - libasound2
      - libass9
      - libasyncns0
      - libavc1394-0
      - libbluray2
      - libbs2b0
      - libcaca0
      - libcairo-gobject2
      - libcairo2
      - libcdio-cdda2
      - libcdio-paranoia2
      - libcdio19
      # - libchromaprint1 #removing chromaprint as it pulls in older ffmpeg and x264 libs
      - libcodec2-1.0
      - libdatrie1
      - libdc1394-25
      - libdrm2
      - libfftw3-double3
      - libflac8
      - libflite1
      - libfontconfig1
      - libfreetype6
      - libfribidi0
      - libgdk-pixbuf2.0-0
      - libgl1
      - libglvnd0
      - libglx0
      - libgme0
      - libgomp1
      - libgraphite2-3
      - libgsm1
      - libharfbuzz0b
      - libicu70
      - libiec61883-0
      - libjack-jackd2-0
      - liblilv-0-0
      - on amd64:
        - libmfx1
      - libmp3lame0
      - libmpg123-0
      - libmysofa1
      - libnorm1
      - libnuma1
      - libogg0
      - libopenal1
      - libopenjp2-7
      - libopenmpt0
      - libopus0
      - libpango-1.0-0
      - libpangocairo-1.0-0
      - libpangoft2-1.0-0
      - libpgm-5.3-0
      - libpixman-1-0
      - libpng16-16
      - libpulse0
      - librabbitmq4
      - libraw1394-11
      - librsvg2-2
      - librubberband2
      - libsamplerate0
      - libserd-0-0
      - libshine3
      - libslang2
      - libsnappy1v5
      - libsndfile1
      - libsndio7.0
      - libsodium23
      - libsord-0-0
      - libsoxr0
      - libspeex1
      - libsratom-0-0
      - libssh-gcrypt-4
      - libthai0
      - libtheora0
      - libtwolame0
      - libusb-1.0-0
      - libva-drm2
      - libva-x11-2
      - libva2
      - libvdpau1
      - libvidstab1.1
      - libvorbis0a
      - libvorbisenc2
      - libvorbisfile3
      - libvpx7
      - libwebp7
      - libwebpmux3
      - libx11-6
      - libx265-199
      - libxau6
      - libxcb-render0
      - libxcb-shape0
      - libxcb-shm0
      - libxcb-xfixes0
      - libxcb1
      - libxdmcp6
      - libxext6
      - libxfixes3
      - libxml2
      - libxrender1
      - libxv1
      - libxvidcore4
      - libzmq5
      - libzvbi0
      - ocl-icd-libopencl1
      - libglu1-mesa
      - freeglut3
    stage:
    - -./usr/lib/$CRAFT_ARCH_TRIPLET/libaom.so.*
    - -./usr/lib/$CRAFT_ARCH_TRIPLET/libdav1d.so.*
  qtbase:
    after: [ ffmpeg, mesa ]
    plugin: nil
    override-pull: |
      QT=5_15_6
      git clone -b v$SNAPCRAFT_PROJECT_VERSION-lts-lgpl --depth=1 git://code.qt.io/qt/qt5.git .
      perl init-repository --module-subset=qtbase
      git submodule update qtbase

      cd qtbase
      find $CRAFT_PROJECT_DIR/snap/local/patches/qtbase_${QT} -type f -print0 | sort -z | xargs -r0 git apply
    override-build: |
      ./configure \
          -prefix /usr \
          -bindir /usr/lib/qt5/bin \
          -libdir /usr/lib/$CRAFT_ARCH_TRIPLET \
          -docdir /usr/share/qt5/doc \
          -headerdir /usr/include/$CRAFT_ARCH_TRIPLET/qt5 \
          -datadir /usr/share/qt5 \
          -archdatadir /usr/lib/$CRAFT_ARCH_TRIPLET/qt5 \
          -plugindir /usr/lib/$CRAFT_ARCH_TRIPLET/qt5/plugins \
          -importdir /usr/lib/$CRAFT_ARCH_TRIPLET/qt5/imports \
          -translationdir /usr/share/qt5/translations \
          -hostdatadir /usr/lib/$CRAFT_ARCH_TRIPLET/qt5 \
          -sysconfdir /etc/xdg \
          -examplesdir /usr/lib/$CRAFT_ARCH_TRIPLET/qt5/examples \
          -release \
          -opensource \
          -confirm-license \
          -nomake examples \
          -nomake tests \
          -I $CRAFT_STAGE/usr/include \
          -L $CRAFT_STAGE/usr/lib/$CRAFT_ARCH_TRIPLET

      make -j$CRAFT_PARALLEL_BUILD_COUNT
      make INSTALL_ROOT="$CRAFT_PART_INSTALL" install
    override-stage: &override-stage-steps |
      craftctl default
      # Cleanup space on build VM to prevent running out of disk space for later parts
      echo "Removing build and src directories"
      rm -rf $CRAFT_STAGE/../parts/$CRAFT_PART_NAME/build/*
      rm -rf $CRAFT_STAGE/../parts/$CRAFT_PART_NAME/src/*
      rm -rf $CRAFT_STAGE/../parts/$CRAFT_PART_NAME/build/.git
      rm -rf $CRAFT_STAGE/../parts/$CRAFT_PART_NAME/src/.git
    build-packages:
      - libatspi2.0-dev
      - libclang-dev
      - libcups2-dev
      - libdbus-1-dev
      - libegl1-mesa-dev
      - libevdev-dev
      - libgif-dev
      - libgtk-3-dev
      - libice-dev
      - libinput-dev
      - libjpeg-dev
      - libmtdev-dev
      - libmysqlclient-dev
      - libpq-dev
      - libsm-dev
      - libsqlite3-dev
      - libssl-dev
      - libudev-dev
      - libvulkan-dev
      - libwayland-dev
      - libwayland-egl1-mesa
      - libxcb-icccm4-dev
      - libxcb-image0-dev
      - libxcb-keysyms1-dev
      - libxcb-randr0-dev
      - libxcb-render-util0-dev
      - libxcb-util-dev
      - libxcb-xinerama0-dev
      - libxcb-xinput-dev
      - libxcomposite-dev
      - libxcursor-dev
      - libxi-dev
      - libxinerama-dev
      - libxkbcommon-x11-dev
      - libxkbcommon-dev
      - libxrandr-dev
      - llvm-dev
      - unixodbc-dev
    stage-packages:
      - libasn1-8-heimdal
      - libatk-bridge2.0-0
      - libatk1.0-0
      - libatspi2.0-0
      - libavahi-client3
      - libavahi-common3
      - libcups2
      - libdbus-1-3
      - libegl1
      - libepoxy0
      - libevdev2
      - libgif7
      - libglib2.0-0
      - libgssapi3-heimdal
      - libgtk-3-0
      - libhcrypto4-heimdal
      - libheimbase1-heimdal
      - libheimntlm0-heimdal
      - libhx509-5-heimdal
      - libice6
      - libinput10
      - libjpeg-turbo8
      - libkrb5-26-heimdal
      - libldap-2.5-0
      - libltdl7
      - libmtdev1
      - libmysqlclient21
      - libodbc1
      - libpcre2-16-0
      - libpixman-1-0
      - libpq5
      - libroken18-heimdal
      - libsasl2-2
      - libsm6
      - libsqlite3-0
      - libssl3
      - libsybdb5
      - libudev1
      - libvulkan1
      - libwayland-client0
      - libwayland-cursor0
      - libwayland-egl1
      - libwind0-heimdal
      - libxcb-icccm4
      - libxcb-image0
      - libxcb-keysyms1
      - libxcb-randr0
      - libxcb-render-util0
      - libxcb-util1
      - libxcb-xinerama0
      - libxcb-xinput0
      - libxcb-xkb1
      - libxcomposite1
      - libxcursor1
      - libxdamage1
      - libxi6
      - libxinerama1
      - libxkbcommon-x11-0
      - libxkbcommon0
      - libxrandr2
  qtxmlpatterns:
    after: [ qtbase ]
    source: git://code.qt.io/qt/qtxmlpatterns.git
    source-tag: v$SNAPCRAFT_PROJECT_VERSION-lts-lgpl
    plugin: nil
    build-environment: &buildenv
      - LD_LIBRARY_PATH: $CRAFT_STAGE/usr/lib/$CRAFT_ARCH_TRIPLET${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}
    override-build: &qtbuild |
      $CRAFT_STAGE/usr/lib/qt5/bin/qmake -qtconf "$CRAFT_STAGE/usr/lib/$CRAFT_ARCH_TRIPLET/qt5/qt.conf"
      make -j$CRAFT_PARALLEL_BUILD_COUNT
      make INSTALL_ROOT="$CRAFT_PART_INSTALL/tmp" install
      cp -a "$CRAFT_PART_INSTALL/tmp$CRAFT_STAGE/." "$CRAFT_PART_INSTALL"
      rm -r "$CRAFT_PART_INSTALL/tmp"
    override-stage: *override-stage-steps
    prime:
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.la
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.prl
  qtx11extras:
    after: [ qtbase ]
    source: git://code.qt.io/qt/qtx11extras.git
    source-tag: v$SNAPCRAFT_PROJECT_VERSION-lts-lgpl
    plugin: nil
    build-environment: *buildenv
    override-build: *qtbuild
    override-stage: *override-stage-steps
    build-packages:
      - libfontconfig1-dev
      - libfreetype6-dev
      - libx11-xcb-dev
      - libxfixes-dev
      - libxcb-glx0-dev
      - libxcb-sync0-dev
    prime:
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.la
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.prl
  qtgamepad:
    after: [ qtbase ]
    source: git://code.qt.io/qt/qtgamepad.git
    source-tag: v$SNAPCRAFT_PROJECT_VERSION-lts-lgpl
    plugin: nil
    build-environment: *buildenv
    override-build: *qtbuild
    override-stage: *override-stage-steps
    prime:
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.la
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.prl
  qtimageformats:
    after: [ qtbase ]
    source: git://code.qt.io/qt/qtimageformats.git
    source-tag: v$SNAPCRAFT_PROJECT_VERSION-lts-lgpl
    plugin: nil
    build-environment: *buildenv
    override-build: *qtbuild
    override-stage: *override-stage-steps
    prime:
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.la
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.prl
    build-packages:
      - libtiff5-dev
      - libmng-dev
    stage-packages:
      - libmng2
      - libwebpdemux2
  qtnetworkauth:
    after: [ qtbase ]
    source: git://code.qt.io/qt/qtnetworkauth.git
    source-tag: v$SNAPCRAFT_PROJECT_VERSION-lts-lgpl
    plugin: nil
    build-environment: *buildenv
    override-build: *qtbuild
    override-stage: *override-stage-steps
    prime:
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.la
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.prl
  qtserialport:
    after: [ qtbase ]
    source: git://code.qt.io/qt/qtserialport.git
    source-tag: v$SNAPCRAFT_PROJECT_VERSION-lts-lgpl
    plugin: nil
    build-environment: *buildenv
    override-build: *qtbuild
    override-stage: *override-stage-steps
    prime:
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.la
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.prl
  qtremoteobjects:
    after: [ qtbase ]
    source: git://code.qt.io/qt/qtremoteobjects.git
    source-tag: v$SNAPCRAFT_PROJECT_VERSION-lts-lgpl
    plugin: nil
    build-environment: *buildenv
    override-build: *qtbuild
    override-stage: *override-stage-steps
    prime:
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.la
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.prl
  qtsvg:
    after: [ qtbase ]
    source: git://code.qt.io/qt/qtsvg.git
    source-tag: v$SNAPCRAFT_PROJECT_VERSION-lts-lgpl
    plugin: nil
    build-environment: *buildenv
    override-build: *qtbuild
    override-stage: *override-stage-steps
    prime:
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.la
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.prl
  qtscript:
    after: [ qtbase ]
    source: git://code.qt.io/qt/qtscript.git
    source-tag: v$SNAPCRAFT_PROJECT_VERSION-lts
    plugin: nil
    build-environment: *buildenv
    override-build: *qtbuild
    override-stage: *override-stage-steps
    prime:
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.la
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.prl
  qtdeclarative:
    after: [ qtxmlpatterns ]
    source: git://code.qt.io/qt/qtdeclarative.git
    source-tag: v$SNAPCRAFT_PROJECT_VERSION-lts-lgpl
    plugin: nil
    build-environment: *buildenv
    override-build: *qtbuild
    override-stage: *override-stage-steps
    prime:
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.la
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.prl
  qtwayland:
    after: [ qtdeclarative ]
    source: git://code.qt.io/qt/qtwayland.git
    source-tag: v$SNAPCRAFT_PROJECT_VERSION-lts-lgpl
    plugin: nil
    build-environment: *buildenv
    override-build: *qtbuild
    override-stage: *override-stage-steps
    prime:
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.la
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.prl
  qttools:
    after: [ qtdeclarative ]
    source: git://code.qt.io/qt/qttools.git
    source-tag: v$SNAPCRAFT_PROJECT_VERSION-lts-lgpl
    plugin: nil
    build-environment: *buildenv
    override-build: *qtbuild
    override-stage: *override-stage-steps
    prime:
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.la
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.prl
    build-packages:
      - libclang-dev
      - llvm-dev
    stage-packages:
      - libclang1-14
      - libllvm14
  qtconnectivity:
    after: [ qtdeclarative ]
    source: git://code.qt.io/qt/qtconnectivity.git
    source-tag: v$SNAPCRAFT_PROJECT_VERSION-lts-lgpl
    plugin: nil
    build-environment: *buildenv
    override-build: *qtbuild
    override-stage: *override-stage-steps
    prime:
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.la
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.prl
    build-packages:
      - libbluetooth-dev
    stage-packages:
      - libbluetooth3
  qtcharts:
    after: [ qtdeclarative ]
    source: git://code.qt.io/qt/qtcharts.git
    source-tag: v$SNAPCRAFT_PROJECT_VERSION-lts-lgpl
    plugin: nil
    build-environment: *buildenv
    override-build: *qtbuild
    override-stage: *override-stage-steps
    prime:
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.la
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.prl
  qtdoc:
    after: [ qtdeclarative, qttools ]
    source: git://code.qt.io/qt/qtdoc.git
    source-tag: v$SNAPCRAFT_PROJECT_VERSION-lts-lgpl
    plugin: nil
    build-environment:
      - LD_LIBRARY_PATH: $CRAFT_STAGE/usr/lib/$CRAFT_ARCH_TRIPLET${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}
      - QT_INSTALL_DOCS: $CRAFT_PART_INSTALL/usr/share/qt5/doc
    override-build: |
      $SNAPCRAFT_STAGE/usr/lib/qt5/bin/qmake -query
      $SNAPCRAFT_STAGE/usr/lib/qt5/bin/qmake
      make -j$SNAPCRAFT_PARALLEL_BUILD_COUNT docs
    override-stage: *override-stage-steps
    prime:
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.la
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.prl
  qtlottie:
    after: [ qtdeclarative ]
    source: git://code.qt.io/qt/qtlottie.git
    source-tag: v$SNAPCRAFT_PROJECT_VERSION-lts-lgpl
    plugin: nil
    build-environment: *buildenv
    override-build: *qtbuild
    override-stage: *override-stage-steps
    prime:
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.la
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.prl
  qtgraphicaleffects:
    after: [ qtdeclarative ]
    source: git://code.qt.io/qt/qtgraphicaleffects.git
    source-tag: v$SNAPCRAFT_PROJECT_VERSION-lts-lgpl
    plugin: nil
    build-environment: *buildenv
    override-build: *qtbuild
    override-stage: *override-stage-steps
    prime:
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.la
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.prl
  qtmultimedia:
    after: [ qtdeclarative ]
    source: git://code.qt.io/qt/qtmultimedia.git
    source-tag: v$SNAPCRAFT_PROJECT_VERSION-lts-lgpl
    plugin: nil
    build-environment: *buildenv
    override-build: *qtbuild
    override-stage: *override-stage-steps
    stage:
      # remove ffmpeg libs as they come from ffmpeg part
      - -usr/lib/$CRAFT_ARCH_TRIPLET/libavcodec.so.*
      - -usr/lib/$CRAFT_ARCH_TRIPLET/libavutil.so.*
      - -usr/lib/$CRAFT_ARCH_TRIPLET/libswresample.so.*
    prime:
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.la
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.prl
    build-packages:
      - libgstreamer1.0-dev
      - libgstreamer-plugins-base1.0-dev
    stage-packages:
      - libgstreamer-gl1.0-0
      - libgstreamer-plugins-base1.0-0
      - libgstreamer1.0-0
      - libgudev-1.0-0
      - liborc-0.4-0
  qtquick3d:
    after: [ qtdeclarative ]
    source: git://code.qt.io/qt/qtquick3d.git
    source-tag: v$SNAPCRAFT_PROJECT_VERSION-lts-lgpl
    plugin: nil
    build-environment: *buildenv
    override-build: *qtbuild
    override-stage: *override-stage-steps
    prime:
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.la
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.prl
  qtquickcontrols:
    after: [ qtdeclarative ]
    source: git://code.qt.io/qt/qtquickcontrols.git
    source-tag: v$SNAPCRAFT_PROJECT_VERSION-lts-lgpl
    plugin: nil
    build-environment: *buildenv
    override-build: *qtbuild
    override-stage: *override-stage-steps
    prime:
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.la
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.prl
  qtscxml:
    after: [ qtdeclarative ]
    source: git://code.qt.io/qt/qtscxml.git
    source-tag: v$SNAPCRAFT_PROJECT_VERSION-lts-lgpl
    plugin: nil
    build-environment: *buildenv
    override-build: *qtbuild
    override-stage: *override-stage-steps
    prime:
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.la
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.prl
  qtquicktimeline:
    after: [ qtdeclarative ]
    source: git://code.qt.io/qt/qtquicktimeline.git
    source-tag: v$SNAPCRAFT_PROJECT_VERSION-lts-lgpl
    plugin: nil
    build-environment: *buildenv
    override-build: *qtbuild
    override-stage: *override-stage-steps
    prime:
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.la
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.prl
  qtsensors:
    after: [ qtdeclarative ]
    source: git://code.qt.io/qt/qtsensors.git
    source-tag: v$SNAPCRAFT_PROJECT_VERSION-lts-lgpl
    plugin: nil
    build-environment: *buildenv
    override-build: *qtbuild
    override-stage: *override-stage-steps
    prime:
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.la
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.prl
  qtwebchannel:
    after: [ qtdeclarative ]
    source: git://code.qt.io/qt/qtwebchannel.git
    source-tag: v$SNAPCRAFT_PROJECT_VERSION-lts-lgpl
    plugin: nil
    build-environment: *buildenv
    override-build: *qtbuild
    override-stage: *override-stage-steps
    prime:
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.la
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.prl
  qtwebsockets:
    after: [ qtdeclarative ]
    source: git://code.qt.io/qt/qtwebsockets.git
    source-tag: v$SNAPCRAFT_PROJECT_VERSION-lts-lgpl
    plugin: nil
    build-environment: *buildenv
    override-build: *qtbuild
    override-stage: *override-stage-steps
    prime:
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.la
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.prl
  qt3d:
    after: [ qtdeclarative, qtimageformats ]
    source: git://code.qt.io/qt/qt3d.git
    source-tag: v$SNAPCRAFT_PROJECT_VERSION-lts-lgpl
    plugin: nil
    build-environment: *buildenv
    override-build: *qtbuild
    override-stage: *override-stage-steps
    prime:
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.la
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.prl
  qtquickcontrols2:
    after: [ qtdeclarative, qtquickcontrols ]
    source: git://code.qt.io/qt/qtquickcontrols2.git
    source-tag: v$SNAPCRAFT_PROJECT_VERSION-lts-lgpl
    plugin: nil
    build-environment: *buildenv
    override-build: *qtbuild
    override-stage: *override-stage-steps
    prime:
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.la
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.prl
  qtlocation:
    after: [ qtquickcontrols, qtserialport ]
    source: git://code.qt.io/qt/qtlocation.git
    source-tag: v$SNAPCRAFT_PROJECT_VERSION-lts-lgpl
    plugin: nil
    build-environment: *buildenv
    override-build: *qtbuild
    override-stage: *override-stage-steps
    build-packages:
      - libgeoclue-2-dev
    prime:
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.la
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.prl
  qtdatavis3d:
    after: [ qtmultimedia ]
    source: git://code.qt.io/qt/qtdatavis3d.git
    source-tag: v$SNAPCRAFT_PROJECT_VERSION-lts-lgpl
    plugin: nil
    build-environment: *buildenv
    override-build: *qtbuild
    override-stage: *override-stage-steps
    prime:
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.la
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.prl
  qtspeech:
    after: [ qtmultimedia ]
    source: git://code.qt.io/qt/qtspeech.git
    source-tag: v$SNAPCRAFT_PROJECT_VERSION-lts-lgpl
    plugin: nil
    build-environment: *buildenv
    override-build: *qtbuild
    override-stage: *override-stage-steps
    prime:
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.la
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.prl
  qtserialbus:
    after: [ qtserialport ]
    source: git://code.qt.io/qt/qtserialbus.git
    source-tag: v$SNAPCRAFT_PROJECT_VERSION-lts-lgpl
    plugin: nil
    build-environment: *buildenv
    override-build: *qtbuild
    override-stage: *override-stage-steps
    prime:
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.la
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.prl
  qttranslations:
    after: [ qttools ]
    source: git://code.qt.io/qt/qttranslations.git
    source-tag: v$SNAPCRAFT_PROJECT_VERSION-lts-lgpl
    plugin: nil
    build-environment: *buildenv
    override-build: *qtbuild
    override-stage: *override-stage-steps
    prime:
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.la
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.prl
  qtwebglplugin:
    after: [ qtwebsockets ]
    source: git://code.qt.io/qt/qtwebglplugin.git
    source-tag: v$SNAPCRAFT_PROJECT_VERSION-lts-lgpl
    plugin: nil
    build-environment: *buildenv
    override-build: *qtbuild
    override-stage: *override-stage-steps
    prime:
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.la
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.prl
  qtwebengine:
    plugin: nil
    override-build: |
      if [ $SNAPCRAFT_TARGET_ARCH != "ppc64el" ]; then
        snap install nightmayr-qtwebengine-5-15-10-2204 --candidate && returncode=$? || returncode=$?
        # This conditional ensures the SDK is built without Webengine for the first revision.
        # The QtWebengine snap is then able to use this SDK snap to build Webengine, allowing it to be included in subsequent revisions of this snap.
        if [ $returncode -ne 0 ]; then
      cat << EOF > "$CRAFT_PART_INSTALL/qtwebengine-missing.txt"
      QtWebengine has not been built and included in this revision of the snap.
      This is likely due to this Qt SDK snap not being available for QtWebengine to use as build dependency preventing it from be built in a separate snap.
      The QtWebengine snap would subsequently be staged from in this QT SDK snap (chicken and egg problem).
      EOF
        else
          rsync -a --ignore-existing /snap/nightmayr-qtwebengine-5-15-10-2204/current/ $CRAFT_PART_INSTALL
        fi
      else
        echo "QtWebengine can not be built for ppc64el, skipping"
        exit 0
      fi
    prime:
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.la
      - -./usr/lib/$CRAFT_ARCH_TRIPLET/*.prl
    stage-packages:
      - libnspr4
      - libnss3
      - libxtst6
    after:
      - qtlocation
      - qtwebchannel
      - qtquickcontrols2
      - qtsvg

  conditioning:
    after: [ qtimageformats, qtgamepad, qtgraphicaleffects, qtscript, qtspeech, qtwebsockets, qtwebglplugin, qtx11extras, qtcharts, qtconnectivity, qtdatavis3d, qttools, qtdoc, qtquick3d, qtlottie, qtnetworkauth, qtserialport, qtquicktimeline, qtremoteobjects, qtscxml, qtsensors, qtserialbus, qttranslations, qtmultimedia, qt3d, qtwayland, qtwebengine ]
    plugin: nil
    override-prime: |
      set -eux
      snapcraftctl prime

      for PC in $(find . -path "*/pkgconfig/*.pc")
      do
        sed -i 's#prefix=$SNAPCRAFT_STAGE#prefix=/snap/$CRAFT_PROJECT_NAME/current#' $PC
        sed -i 's#prefix = /usr#prefix=/snap/$CRAFT_PROJECT_NAME/current/usr#' $PC
        sed -i 's#prefix=/usr#prefix=/snap/$CRAFT_PROJECT_NAME/current/usr#' $PC
        sed -i 's#original_prefix=/snap/$CRAFT_PROJECT_NAME/current/usr#original_prefix=/usr#' $PC

        sed -i 's#libdir=/usr#libdir=${prefix}#' $PC
        sed -i 's#libdir=/lib#libdir=/snap/$CRAFT_PROJECT_NAME/current/lib#' $PC

        sed -i 's#exec_prefix=/usr#exec_prefix=${prefix}#' $PC
        sed -i 's#includedir=/usr#includedir=${prefix}#' $PC
        sed -i 's#sysconfdir=/etc#sysconfdir=/snap/$CRAFT_PROJECT_NAME/current/etc#' $PC

        sed -i 's#/usr/#/snap/$CRAFT_PROJECT_NAME/current/usr/#g' $PC
        sed -i 's#$CRAFT_STAGE##g' $PC
        sed -i 's#/etc/#/snap/$CRAFT_PROJECT_NAME/current/etc/#g' $PC
      done