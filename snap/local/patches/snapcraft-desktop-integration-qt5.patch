diff --git a/qt5/Makefile b/qt5/Makefile
new file mode 100644
index 0000000..a3b9ff2
--- /dev/null
+++ b/qt5/Makefile
@@ -0,0 +1,36 @@
+#!/usr/bin/make -f
+
+SRC_DIR ?= .
+
+BIN_DIR              := $(DESTDIR)/command-chain
+DEST_LAUNCHER        := desktop-launch
+DEST_CONFIGURE_HOOK  := hooks-configure-desktop
+HW_PLATFORM          := $(shell uname --hardware-platform)
+ARCH                 := $(HW_PLATFORM)-linux-gnu
+WITH_PYTHON          := "3.10"
+
+.PHONY: clean install-$(DESTLAUNCHER) install-$(DEST_CONFIGURE_HOOK)
+
+build: $(DEST_LAUNCHER) $(DEST_CONFIGURE_HOOK)
+
+clean:
+	rm -f $(DEST_LAUNCHER)
+	rm -f $(DEST_CONFIGURE_HOOK)
+
+$(DEST_LAUNCHER):
+	@cat $(SRC_DIR)/init >> $(DEST_LAUNCHER)
+# tail -n +2 to remove the shebang
+	@tail -n +2 $(SRC_DIR)/desktop-exports | sed -e "s/%PLATFORM_PLUG%/$${PLATFORM_PLUG:?}/" >> $(DEST_LAUNCHER)
+	@tail -n +2 $(SRC_DIR)/launcher-specific | sed -e "s/%WITH_PYTHON%/$(WITH_PYTHON)/" >> $(DEST_LAUNCHER)
+	@tail -n +2 $(SRC_DIR)/mark-and-exec >> $(DEST_LAUNCHER)
+
+$(DEST_CONFIGURE_HOOK):
+	@cat $(SRC_DIR)/fonts > $(DEST_CONFIGURE_HOOK)
+
+install-$(DEST_LAUNCHER): $(DEST_LAUNCHER)
+	install -D -m755 $(DEST_LAUNCHER) "$(BIN_DIR)"/$(DEST_LAUNCHER)
+
+install-$(DEST_CONFIGURE_HOOK): $(DEST_CONFIGURE_HOOK)
+	install -D -m755 $(DEST_CONFIGURE_HOOK) "$(BIN_DIR)"/$(DEST_CONFIGURE_HOOK)
+
+install: install-$(DEST_LAUNCHER) install-$(DEST_CONFIGURE_HOOK)
diff --git a/qt5/desktop-exports b/qt5/desktop-exports
new file mode 120000
index 0000000..8013267
--- /dev/null
+++ b/qt5/desktop-exports
@@ -0,0 +1 @@
+../common/desktop-exports
\ No newline at end of file
diff --git a/qt5/fonts b/qt5/fonts
new file mode 120000
index 0000000..3ef54f4
--- /dev/null
+++ b/qt5/fonts
@@ -0,0 +1 @@
+../common/fonts
\ No newline at end of file
diff --git a/qt5/init b/qt5/init
new file mode 120000
index 0000000..350b7be
--- /dev/null
+++ b/qt5/init
@@ -0,0 +1 @@
+../common/init
\ No newline at end of file
diff --git a/qt5/launcher-specific b/qt5/launcher-specific
new file mode 100755
index 0000000..9dcfdcf
--- /dev/null
+++ b/qt5/launcher-specific
@@ -0,0 +1,92 @@
+#!/bin/bash
+###################################
+# KDE NEON launcher specific part #
+###################################
+
+# Build mime.cache
+# needed for gtk and qt icon
+if [ "$needs_update" = true ]; then
+  if [ ! -f "$SNAP_DESKTOP_RUNTIME/usr/share/mime/mime.cache" ]; then
+    if command -v update-mime-database >/dev/null; then
+      cp --preserve=timestamps -dR "$SNAP_KF_RUNTIME/usr/share/mime" "$XDG_DATA_HOME"
+      async_exec update-mime-database "$XDG_DATA_HOME/mime"
+    fi
+  fi
+fi
+
+# QGnomePlatform Libs
+prepend_dir LD_LIBRARY_PATH "$SNAP_QGNOMEPLATFORM_RUNTIME/usr/lib/$ARCH"
+
+# KDE Framework Libs
+prepend_dir LD_LIBRARY_PATH "$SNAP_KF_RUNTIME/usr/lib/$ARCH"
+
+# Qt Libs
+prepend_dir LD_LIBRARY_PATH "$SNAP_DESKTOP_RUNTIME/usr/lib/$ARCH/qt5/libs"
+
+# Add paths for games
+append_dir PATH "$SNAP/usr/games"
+append_dir PATH "$SNAP_DESKTOP_RUNTIME/usr/games"
+
+# Add QT_PLUGIN_PATH (Qt Modules).
+append_dir QT_PLUGIN_PATH "$SNAP/usr/lib/$ARCH/qt5/plugins"
+append_dir QT_PLUGIN_PATH "$SNAP/usr/lib/$ARCH"
+append_dir QT_PLUGIN_PATH "$SNAP_KF_RUNTIME/usr/lib/$ARCH/qt5/plugins"
+append_dir QT_PLUGIN_PATH "$SNAP_KF_RUNTIME/usr/lib/$ARCH"
+append_dir QT_PLUGIN_PATH "$SNAP_QGNOMEPLATFORM_RUNTIME/usr/lib/$ARCH/qt5/plugins"
+append_dir QT_PLUGIN_PATH "$SNAP_QGNOMEPLATFORM_RUNTIME/usr/lib/$ARCH"
+append_dir QT_PLUGIN_PATH "$SNAP_DESKTOP_RUNTIME/usr/lib/$ARCH/qt5/plugins"
+append_dir QT_PLUGIN_PATH "$SNAP_DESKTOP_RUNTIME/usr/lib/$ARCH/"
+# And QML2_IMPORT_PATH (Qt Modules).
+append_dir QML2_IMPORT_PATH "$SNAP/usr/lib/$ARCH/qt5/qml"
+append_dir QML2_IMPORT_PATH "$SNAP/lib/$ARCH"
+append_dir QML2_IMPORT_PATH "$SNAP_DESKTOP_RUNTIME/usr/lib/$ARCH/qt5/qml"
+append_dir QML2_IMPORT_PATH "$SNAP_DESKTOP_RUNTIME/lib/$ARCH"
+append_dir QML2_IMPORT_PATH "$SNAP_KF_RUNTIME/lib/$ARCH/qml"
+append_dir QML2_IMPORT_PATH "$SNAP_KF_RUNTIME/lib/$ARCH"
+
+# Fix locating the QtWebEngineProcess executable
+export QTWEBENGINEPROCESS_PATH="$SNAP_DESKTOP_RUNTIME/usr/lib/$ARCH/qt5/libexec/QtWebEngineProcess"
+
+# Removes Qt warning: Could not find a location
+# of the system Compose files
+export QTCOMPOSE="$SNAP_DESKTOP_RUNTIME/usr/share/X11/locale"
+export QT_XKB_CONFIG_ROOT="/usr/share/X11/xkb"
+
+# KIO specific
+# Directly fork slaves.
+export KDE_FORK_SLAVES=1
+# Path to KIO slaves.
+export KF5_LIBEXEC_DIR="$SNAP_KF_RUNTIME/usr/lib/$ARCH/libexec/kf5"
+
+# Add path to VLC plugins
+export VLC_PLUGIN_PATH="$SNAP_DESKTOP_RUNTIME/usr/lib/x86_64-linux-gnu/vlc/plugins"
+
+# Ensure QtChooser behaves.
+export QTCHOOSER_NO_GLOBAL_DIR=1
+export QT_SELECT=5
+# qtchooser hardcodes reference paths, we'll need to rewrite them properly
+ensure_dir_exists "$XDG_CONFIG_HOME/qtchooser"
+echo "$SNAP/usr/lib/qt5/bin" > "$XDG_CONFIG_HOME/qtchooser/5.conf"
+echo "$SNAP/usr/lib/$ARCH" >> "$XDG_CONFIG_HOME/qtchooser/5.conf"
+echo "$SNAP/usr/lib/qt5/bin" > "$XDG_CONFIG_HOME/qtchooser/default.conf"
+echo "$SNAP/usr/lib/$ARCH" >> "$XDG_CONFIG_HOME/qtchooser/default.conf"
+
+# This relies on qtbase patch
+# 0001-let-qlibraryinfo-fall-back-to-locate-qt.conf-via-XDG.patch
+# to make QLibraryInfo look in XDG_* locations for qt.conf. The paths configured
+# here are applied to everything that uses QLibraryInfo as final fallback and
+# has no XDG_* fallback before that. Currently the most interesting offender
+# is QtWebEngine which will not work unless the Data path is correctly set.
+cat << EOF > "$XDG_CONFIG_HOME/qt.conf"
+[Paths]
+Data = $SNAP_DESKTOP_RUNTIME/usr/share/qt5/
+Translations = $SNAP_DESKTOP_RUNTIME/usr/share/qt5/translations
+EOF
+
+if [ -e "$SNAP_DESKTOP_RUNTIME/usr/share/i18n" ]; then
+    export I18NPATH="$SNAP_DESKTOP_RUNTIME/usr/share/i18n"
+    locpath="$XDG_DATA_HOME/locale"
+    ensure_dir_exists "$locpath"
+    export LOCPATH="$locpath:/usr/lib/locale"
+    LC_ALL=C.UTF-8 async_exec "$SNAP/snap/command-chain/locale-gen"
+fi
diff --git a/qt5/mark-and-exec b/qt5/mark-and-exec
new file mode 120000
index 0000000..1bf8626
--- /dev/null
+++ b/qt5/mark-and-exec
@@ -0,0 +1 @@
+../common/mark-and-exec
\ No newline at end of file
